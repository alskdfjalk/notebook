==== Dot language ====
{{{
	/* 简单图例
	graph graphname {
		rankdir = LR;		//Rank Direction Left to Right
		a -- b;
		b -- c;
		b -- d;
		d -- a;
	}
	*/
	
	/* 有向图
	digraph graphname {
		a -> b;
		b -> c;
		a -> c;
	}
	*/
	
	/* 带标签的简单有向图
	digraph graphname {
		T	[label="Teacher"]
		P	[label="Pupil"]
	
		T -> P  [label="Instructions", fontcolor=darkgreen]
	}
	*/
	
	/* 同样的图，不同的形状和颜色
	形状示例: http://www.graphviz.org/content/node-shapes
	digraph graphname {
		T	[label="Teacher" color=Blue, fontcolor=Red, fontsize=24, shape=box]
		P	[label="Pupil" color=Blue, fontcolor=pink, fontsize=24, shape=oval]
	
		T->P	[label="Instructions", fontcolor=darkgreen]
	}
	*/
	
	/*
	digraph summary {
		start	[label="Start with a Node"]
		next	[label="Choose your shape", shape=box]
		warning [label="Don't go overboard", color=Blue, 
				fontcolor=Red, fontsize=24, style=filled, 
				fillcolor=green, shape=octagon]
		end	[label="Draw your graph!", shape=box, style=filled, fillcolor=yellow]
	
		start->next
		start->warning
		next->end	[label="Getting Better...", fontcolor=Blue]
	}
	*/
	
	/* 单独地去定义每一个节点其实很浪费时间，虾面这个技巧能够加速
	digraph hierarchy {
		nodesep = 1.0  // increases the separation between nodes
		
		node [color=Red, fontname=Courier, shape=box] // All nodes will this shape and colour 
		edge [color=Blue, style=dashed] // All the lines look like this
	
		Headteacher->{Deputy1 Deputy2 BusinessManage}
		Deputy1->{Teacher1 Teacher2}
		BusinessManage->ITManager
		{rank=same;ITManager Teacher1 Teacher2} // Put them on the same level
	}
	*/
	
	/*	可以用HTML来定义这一类节点
	digraph structs {
		node	[shape=record]
		struct1	[label="<f0> left|<f1> mid\ dle|<f2> right"];
		struct2	[label="{<f0> one|<f1> two\n\n\n}" shape=Mrecord];
		struct3	[label="<f1>hello\nworld |{ b |{c|<here> d|e}| f}| g | h"];
	
		struct1:f1 -> struct2:f0;
		struct1:f0 -> struct3:f1;
	}
	*/
	
	/* 有限状态机
	digraph finite_state_machine {
		rankdir = LR;
		size = "8,5";
		node	[shape = circle];
		S0 -> S1 [ label = "Lift Nozzle"];
		S1 -> S0 [ label = "Replace Nozzle"];
		S1 -> S2 [ label = "Authorize Pump"];
		S2 -> S0 [ label = "Replace Nozzle"];
		S2 -> S3 [ label = "Pull Trigger"];
		S3 -> S2 [ label = "Release Trigger"];
	}
	*/
	
	/* 数据流示意图
	digraph dfd {
		node	[shape=record];
		store1 [label="<f0> left|<f1> Some data store"];
		proc1  [label="{<f0> 1.0|<f1> Some process here\n\n\n}" shape=Mrecord];
		enti1	[label="Customer" shape=box];
		store1:f1 -> proc1:f0;
		enti1 -> proc1:f0;
	}
	*/
}}}
