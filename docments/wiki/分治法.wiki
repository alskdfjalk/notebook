* 定义：
  # 分治模式在每层递归时都有三个步骤：
    # 分解 原问题为若干自问题，这些子问题是原问题的规模较小的实例。
    # 解决 这些子问题，递归地求解各自问题。然而，若子问题的规模足够小，则直接求解。
    # 合并 这些子问题的解成原问题的解。
  # 归并算法完全遵循分治模式。直观上其操作如下：
    # 分解：分解待排序的n个元素的序列成各具n/2个元素的两个子序列。
    # 解决：使用归并排序递归地排序两个子序列。
    # 合并：合并两个已排序的子序列以产生已排序的答案。
  * `当待排序的序列长度为1时，递归“开始回升”，在这种情况下不要做任何工作，因为长度为1的每个序列都已排好序。`
* 实例
  * 生活实例
  {{{
  	    回到扑克牌的例子，假设桌上有两堆牌面朝上的牌，每堆都已排好序，
	最小的牌在顶上。
	    我们希望把两堆牌合并成单一的排好序的输出堆，牌面朝下地放在桌上。
	    我们的基本步骤包括在牌面朝上的两堆牌的顶上两张牌中选取较小的一张，
	将该牌从其堆中移开（该堆的顶上将显露一张新牌）并牌面朝下地将牌放置到
	输出堆。
	    重复这个步骤，直到一个输入堆为空，这时，我们只是拿起剩余的输入堆并
	牌面朝下地将该堆放置到输出堆。因为我们只是比较顶上的两张牌，所以计算上
	每个基本步骤需要常量时间。因为我们最多执行n个基本步骤。
  }}}
  * 代码
  {{{
  	
  }}}
