 = 一猫运维Q4计划 = 
== 上季度问题总结 ==
  * 故障点（架构中的故障点）
    - mysql-proxy(SLB导致)
  {{{ class="brush:php"
	    上季度出现的问题都是围绕数据库的代理节点发生的, 所以本季重点工作放
	在数据库的高可用实现上。
  }}}
  * 可能故障点
    - redis、memcached
  {{{ class="brush:php"
	    上季度中cache类的节点并未出现故障，但是该节点仍是整个结构中和数据库
	一样的薄弱环节，需要当作重点故障点来解决。
  }}}
  * 日志报警
    - nginx日志监控
  {{{ class="brush:php"
  	    在上季度中，出现过因为某开发小组因为没有将应该被cdn缓存的请求做必
	要的处理导致服务器响应缓慢。
	    所以需要建立日志频率监控机制, 报警不单纯监控关键字，也应该监控日志
	出现的频率，几个重点刷量的域名中，通过统计日志出现的时间来设定阀值并报
	警，并且告知开发人员进行优化。
  }}}

== 本季度工作 == 
=== 目标 ===
  * 服务可用率
    - 99.99%
=== 重点工作 ===
  * 建立运维工作制度（流程）
    # 增减服务器时需要做的事情
    - 运维工具、脚本放置目录
    - 应用程序的配置格式、目录
    - 上线流程
    - 文档机制（格式、内容）
  * 上线工具
    # jenkins
  * 数据库的高可用
    # PXC
  * Redis高可用
    # redis-sentinel
  * memcached高可用
    # 未知
  * 日志收集、展示、分析、报警
    # Nginx
    - php
    - mysql
    - 程序输出日志
  * 账号信息(敏感信息)保密
  * 程序打包
    所有程序打包进压缩包，并且内置安装、卸载、升级等选项的脚本

== 目标实现需求 ==
  为达到99.99%的可用性，运维人员必须分为两个方向：
  *  系统维护 - 2人
	专职处理日常事务、上线、以及其他部门的临时需求
	# 上线
	- 临时需求
	- 日常维护
  *  系统支持 - 2人
	专职开发、测试等新架构或新的实施、维护方案
	# 架构优化
	- 程序参数优化
	- 架构修改测试
